Nodojs
======


# Nodejs 是什么
我们打开 Nodejs 的官网，中间几行句子精炼的概括了 Nodejs 的精髓，
>Node.js® is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js' package ecosystem, npm, is the largest ecosystem of open source libraries in the world.

Nodejs 是一个运行环境，可以让 javascript 运行在服务器端，采用 Chrome 的 V8 引擎解析 javascript。Nodejs 是事件驱动的，非阻塞，效率高。npm 是 Nodejs 的包管理系统，可以非常方便的进行 Nodejs 插件的安装、升级，一行命令即可搞定，如 npm install koa. 底层采用 C++ 编写。

文件读写，进程管理，网络通信，2009 年面世。欣欣向荣

以上是非常官方的术语，是对 Nodejs 编程特性的一些总结，这些特性体现在了编程中：

官网的一句话
打破了前后端边界

# 全局变量
global, process
url

# 模块
核心模块 http fs path
文件模块 
第三方

创建 ——> 导出 ——> 加载 ——> 使用

https://nodejs.org/dist/latest-v6.x/docs/api/url.html 的一张图，放在 http 的讲解上

## Nodejs 的基本概念

### 回调函数
函数作为参数，

### 异步与非阻塞，单线程
js 的特性，代码顺序与执行顺序，如果某一步有花时间比较长的操作，不会等它执行完，继续进行下一步，如果想上一步执行完再执行后面的操作，必须把后面的操作放进上个函数的回调函数里，figtodo: 上代码
上代码

### 事件，事件驱动，事件循环
- 什么是事件？

只有鼠标，键盘吗？读文件等

核心在于：监听，一怎样就怎样，敌不动，我不动，敌一动，我乱动

任意动作，可以自己定义事件，事件名，事件动作
监听：给事件注册回调函数，
给事件

## 模块
http 模块，负责。。。

事件模块 events

事件注册

事件监听 on
监听什么？如何监听？事件名与响应，一怎么就怎么
一个事件可以对应多个响应，不超过 10 个

事件发生 emit()

事件移除

## Promise 支持
bluebird 模块



### 框架学习 koa
中间件是什么？
koa 的中间件是 genetor 函数


