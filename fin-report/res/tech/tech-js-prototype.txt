# 原型(Prototype)

## 参考资料
[1]Stoyan Stefanov.Object-Oriented JavaScript:Packt Publishing Ltd.,UK,2008:149-166
Prototype

## 要回答的问题
什么是原型？
学了有什么用？哪里用得到？
从哪里借鉴的
如何使用
- 如何给原型添加属性
- 如何使用原型的属性

## 回顾
任何对象都有自己的构造函数 constructor
函数对象
toString()
函数对象的常用方法和属性:
length：参数个数
constructor: Function()

## todo
函数对象与用函数构造的对象，在 prototype 上有哪些区别

## 什么是 Prototype
prototype 是函数对象的一个属性，其值是一个对象: typeof fun.prototype 为 "object"
每个函数都有的一个属性(property)，初始化为空对象


## Prototype 的特点
如果构造函数的属性改动了，用此构造函数创建的对象的属性会发生变化
prototype 也有 constructor

## 可列举(Enumerable)的属性
什么是可列举(Enumerable)的属性？
可以用 `for-in` loop 打印出来
判断: propertyIsEnumerable()
prototype 的属性不能列举？

property
prototype.property

如果一个对象的 constructor 被重新赋值，它的某个原型链上的属性还能访问到吗？
a.constructor.property 会变成其他的，但仍可以通过 a.property 访问到

函数对象有 prototype 包含一个对象，一个属性是 constructor, 值就是本身；另一个属性是 __proto__

## __proto__


## 用到的场合
Prototype 究竟有多重要？哪里用得到

>shape JavaScript any way you like

- 可以给內建对象(Build-in Objects)增加更多方法去完善和增强功能

如给 Array 对象增加一个判断某个元素是否在某个数组中的功能 Array.prototype.inArray()
给 String 对象增加一个反转字符串的功能 String.prototype.reverse()

## 如何访问 Prototype 的属性和方法
我们可以把一个函数的名字视为类，如：add，用该类初始化的一个对象视为实例(instance)，如：var a = new add(),
那么可以这样访问 prototype:

- add.prototype.name
- a.constructor.prototype.name
- a.name



## 对类的 prototype 的修改会影响到所有用该类创建的对象




定义了一个函数，prototype 就创建了
初始值是空对象(empty object)

Prototype 可以添加属性(properties)和方法(methods), 甚至一个对象

用构造函数创建对象时，该对象就有了 Prototype 属性，Prototype 的属性和方法的访问

如果改变了一个

## 自身属性与原型属性、优先级
Own properties take precedence over prototype's properties with the same name
一个对象的某个属性如果和它的 prototype 的属性重名，优先使用自身的属性

hasOwnProperty() 方法

原型链(property chain)

## isPrototypeOf()

怎样知道某个属性是不是某个对象的 prototype
someProperty.isPrototypeOf(SomeObject)

## 

todo:
apply 方法忘了

## 检查某个对象的 prototype 是否已经有了现成的方法
经典代码
```
if (!String.prototype.reverse) {
    String.prototype.reverse = function () {
        return Array.prototype.reverse.apply(this.split('')).join('');
    }
}
```


## 总结一下场合
改了类的 prototype, 实例会怎样()
改了实例的 constructor
改了

## 重新学习 Some Prototype gotchas 这一节



js 深入理解
语法糖(Syntactic sugar)
call, apply, bind
构造函数有哪些方法
null, undefined
__proto__ 是什么

挂载

prototype 是个什么 
不用 new 会怎样
this 指的谁
isPrototypeOf()
hasOwnProperty()
propertyIsEnumerable()

built-in 对象的 enhancement

prototype 是谁的属性
给 prototype 添加属性


# 一切皆数据, 数据皆对象
- 提示：共同点与相同点

## 一切皆数据
### 相同点
这里的数据是什么意思--变量
变量有什么特点？
- 定义的形式上: var a = b; 
- 用法上：可以运算，删除等, 可以赋值， 当成函数参数， 可以被返回，有全局与局部之分（函数中定义函数），可以被返回, 可以作为对象的属性的值

### 不同点
名字是引用 reference，加括号是调用 invoke
函数是数据，但是包含 代码，可以被调用 invoke
类型 typeof 是 "function"


### 其他
匿名函数机制
回调函数：被当成参数去传入另一个函数
#### 自动调用
好处：不用创建(全局)变量，只执行一次，只完成一个任务

函数的作用域是在定义(defined)时确定的，而不是在执行时(executed)，定义在哪，他就可以访问他所在域的变量和父域的变量

私有（private）函数: 函数中定义函数并使用
特点：
不是全局的，外部不能使用，
好处与应用：
减少全局变量，全局空间更干净，减少冲突


函数中返回函数 使用 ： a()(), 改变作用域






## 数据皆对象
### 相同点
对象是什么意思：键值对的组合 

数组与普通的对象的qub 
不同的对象间的方法，属性不同而已： 

我是谁的实例？ b instanceof A
constructor 是 构造函数 的原型的方法，是实例的方法


# 域 scope 与 this
私有域 可以访问 公有域的变量
公有域不能直接访问私有域，如何访问
函数中的 this 是
