# 已修改(Modified)状态与工作目录(working directory)

你一改动文件，马上就改动的文件就进入了已修改(Modified)状态，在你还没运行 git add 命令之前，所有的文件目前都在工作区(working directory)

那么此时有哪些操作呢
- 看看我改动了什么
- 手残改坏了，想恢复之前状态

## 对文件有哪些修改？
- 对某个文件内容的修改
全部反应为删除行与添加行

- 新建、删除、重命名、移动文件
全部反应为 删除文件与新建文件

举例：
新建了 a.html
向 a.txt 中写了文字  
把 a.html 文件的第三行的 div 修改为 a
删除了 a.html
把 a.html 重命名为 b.html
把 a.html 移动到了 html 文件夹下

## 看看我刚刚改了哪些内容？
根据上面的文件修改，所有的文件操作都可以归为一下几种或他们的组合

- 创建文件
- 修改内容(反应为删除行与添加行)
- 删除文件

如：
复制 = 创建文件 + 修改内容
移动 = 删除文件 + 创建文件 + 修改内容
重命名 = 删除文件 + 创建文件 + 修改内容

- 创建文件与改动内容
- 移动、删除、重命名文件

### 创建文件与修改内容
clone 后，你修改了一些文件，新建了 a.txt 并添加了一些文字, 创建了 sub 目录，在 sub 目录下又新建了 b.txt 并添加了一些文字，好，现在你想看看你做的这些修改，怎么做？ 
git status
会显示未跟踪文件(Untracked files)
怎么显示？很详细吗，对某行的修改都会显示吗？
不会，而且只显示根目录的文件与文件夹
>Untracked files:
>   (use "git add <file>..." to include in what will be committed)
> 
>         .gitignore
>         a.txt
>         sub/

看来只显示状态而不显示改动, 即只显示根目录下的文件和文件夹

### 删除文件
然后你把 a.txt 删了，并创建了 c.txt, 随便写点内容，然后 git status
> Untracked files:
>   (use "git add <file>..." to include in what will be committed)
> 
>         .gitignore
>         sub/

看来只显示状态而不显示改动, 即只显示根目录下的文件和文件夹

### 总结
对文件修改后且未暂存，git status 只显示根目录的状态，即只显示根目录下的文件和文件夹，不会显示详细改动

## 能恢复操作吗，能恢复到什么程度？

你改了一天都没提交，改了无数地方：

a.txt 复制为 c.txt
c.txt 改了 10 个字符
创建了 d.txt 文件，并写了 500 行内容
创建了 sub 目录，在该目录下创建了 e.txt
修改了 c.txt 内容，改了 10 个地方
修改了 d.txt 内容，改了 100 个地方
...
共 100 次左右操作，然后悲剧发生了，你想恢复到第 90 次操作，可以吗？

好像不可以

因此，修改完后一定 git add 一下，作用就是让 git 去追踪文件的修改，处于暂存状态时，所有文件的改动都会被追踪(tracked)，这样就能用 git status 或 git diff 显示详细的修改。
